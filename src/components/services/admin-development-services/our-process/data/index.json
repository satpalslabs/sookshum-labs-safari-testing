{
    "process-services": [
        {
            "title": "Discovery ",
            "description": "Our dashboard development methodology begins with an in-depth discovery process of gathering client requirements, goals, and business objectives for the dashboard. This information provides our team with a solid foundation and a way for us to measure our success along the way."
        },
        {
            "title": "Planning",
            "description": "Following our discovery process and requirements gathering we begin to plan out a detailed schedule and list of deliverables that will be included in this particular dashboard service design and development. However, we are the first to admit that all planning is aspirational and reality soon requires changes. "
        },
        {
            "title": "Design",
            "description": "The principles of dashboard design best practices require that we donâ€™t fall in love with our designs and ignore the functional requirements that have been meticulously spelled out from the beginning the functionality needs to lead the way when iit comes to deciding on a particular design direction. "
        },
        {
            "title": "Development",
            "description": "Successful digital dashboard development requires that our designers and our developers work hand-in-hand with each other throughout the design process to certify each design concept is achievable and acceptable by your code developers."
        },
        {
            "title": "Testing",
            "description": "The Sookshum philosophy on testing is quite simple: test, re-test, and test again. This is not an exaggeration. There cheapest way to make mistakes is to find them during testing and not after any formal code has been built, and certainly not after a product has been released!"
        },
        {
            "title": "Hand-Off",
            "description": "Our hand-off process is more of a handshake that extends until an actual go-live date. Our designers know that bug fixing often involves changes to our design,  no matter who caused the bug, and we stay involved and ready to help our development team or your until the very last day of deployment,"
        }
    ]
}